Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (main)
$ touch "Git Commands.txt" // crear archivo con espacios 

git status // Para trackear que pasa con los documentos

Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (main)
$ git status
On branch main

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        learn.txt

nothing added to commit but untracked files present (use "git add" to track)

$  git add  . // agregar cualquier archivo o en lugar de " . " poner el nombre del archivo

Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (main)
$  git add learn.txt

Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (main)
$ git status
On branch main

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   learn.txt

Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (main)
$ git commit -m "learn file added"
[main (root-commit) fff4168] learn file added
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 learn.txt

Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (main)
$ git status
On branch main
nothing to commit, working tree clean


Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (main)
$ git log // funciona para poder listar los cambios que han sucedido en la rama
commit a25c5a14ec2d55184e938dfd4dc3ef08dad27b94 (HEAD -> main)
Author: Luisito2178Git <luis.apd2178@gmail.com>
Date:   Wed Aug 21 09:50:53 2024 -0600

    extra file added

commit fff41686af3e26488568484a5e43c4cd15aae83b
Author: Luisito2178Git <luis.apd2178@gmail.com>
Date:   Wed Aug 21 09:47:10 2024 -0600

    learn file added

Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (main)
$ git mv learn.txt notes.txt // Cambiar el nombre de un archivo 


Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (main)
$ git branch -M name //  Esto es para cambiar el nombre de la rama 

Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (main)
$ git branch firstexample // Crea una rama en el git pero no te manda a la rama seguimos en main

Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (main)
$ git chekout firstexample // Error de capa 8 ya que escribi mal checkout
git: 'chekout' is not a git command. See 'git --help'.

The most similar command is
        checkout

Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (main)
$ git checkout firstexample
Switched to branch 'firstexample'// Aquí marca que se cambio la rama 

Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (firstexample) // Ahora en los paréntesis se ve que cambiamos la rama
$

------------
Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (firstexample)
$ git add .

Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (firstexample)
$ git commit -m "changes in notes.txt and added firstbranch.txt"
[firstexample 8e41ef3] changes in notes.txt and added firstbranch.txt
 2 files changed, 31 insertions(+), 2 deletions(-)
 create mode 100644 firstbranch.txt

Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (firstexample)
$ git status
On branch firstexample
nothing to commit, working tree clean

------

Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (firstexample)
$ git branch -m "Luis-changes" // Con esto se cambia el nombre de la rama actual

-----
Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (Luis-changes)
$ vi name.txt //visualizar un archivo

----

Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (Luis-changes)
$ vi name.txt //editar un archivo 
-----
Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (Luis-changes)
$ cat name.txt //visualizar un archivo cat
The cat command in Linux is used to concatenate and display files. It can be used for the following purposes:

Displaying the contents of a file: When you run cat filename, the contents of the specified file will be displayed in the terminal.
Combining multiple files: You can use cat file1.txt file2.txt file3.txt to display the contents of multiple files one after the other.
Creating simple text files: If you run cat &gt; filename.txt, you can start typing text and press Ctrl+D to save the content to the file.
Appending data to files: The cat command can be used to append data to the end of a file using the &gt;&gt; operator, e.g., cat &gt;&gt; filename.txt.
Generating temporary data: You can use cat &lt;&lt;EOF to type in multi-line text and press Ctrl+D to end the input, which can then be used as input for other commands.

Mas información para cat 

----

// Para eliminar una branch necesitamos estar en otra branch ejemplo de eliminar Luis-changes

Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (Luis-changes)
$ git checkout main
Switched to branch 'main'

Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (main)
$ git checkout -d Luis-changes

-----
Luigi@Luisito2178 MINGW64 ~/Desktop/LearnGit (Luis-changes)
$ git branch // Te da la lista de las ramas creadas y te marca donde esta la cabeza (head)
* Luis-changes
  main

